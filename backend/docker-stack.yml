version: '3.3'

services:
  caddy:
    image: caddy:2.2.1-alpine
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ../frontend/build:/srv
      - caddy_data:/data
      - caddy_config:/config
    ports:
      - 3000:80
    deploy:
      mode: replicated
      replicas: 1
  api:
    image: iksde-bank-server:latest
    command: ./manage.py runserver 0.0.0.0:8000
    entrypoint: ./wait-for-postgres-and-data.sh
    volumes:
      - .:/code
      - log_data:/var/log/
      - tmp_data:/tmp
    ports:
      - 8000:8000
    env_file:
      - ./config.env
    depends_on:
      - postgres
      - redis
      - celery
      - beat
    deploy:
      mode: replicated
      replicas: 1
  celery:
    image: iksde-bank-server:latest
    volumes:
      - .:/code
    command: celery -A iksde_bank worker -l info
    env_file:
      - ./config.env
    depends_on:
      - postgres
      - redis
    deploy:
      mode: replicated
      replicas: 1
  celery-transfers:
    image: iksde-bank-server:latest
    volumes:
      - .:/code
    command: celery -A iksde_bank worker -l info -Q transfers
    env_file:
      - ./config.env
    depends_on:
      - postgres
      - redis
    deploy:
      mode: replicated
      replicas: 1
  beat:
    image: iksde-bank-server:latest
    volumes:
      - .:/code
    command: celery -A iksde_bank beat -l INFO
    env_file:
      - ./config.env
    depends_on:
      - celery
      - postgres
      - redis
    deploy:
      mode: replicated
      replicas: 1
  postgres:
    image: postgres:12.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5431:5432
    deploy:
      mode: replicated
      replicas: 1
  redis:
    image: redis:5.0-alpine
    volumes:
      - redis_data:/data/
    ports:
      - 6379:6379
    deploy:
      mode: replicated
      replicas: 1
  elasticsearch:
    image: elasticsearch:7.10.1
    volumes:
      - type: bind
        source: ./elk/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch_data
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    deploy:
      mode: replicated
      replicas: 1
  kibana:
    image: kibana:7.10.1
    volumes:
      - type: bind
        source: ./elk/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    deploy:
      mode: replicated
      replicas: 1
  logstash:
    image: logstash:7.10.1
    volumes:
      - type: bind
        source: ./elk/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./elk/logstash.conf
        target: /usr/share/logstash/pipeline/logstash.conf
        read_only: true
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch
    deploy:
      mode: replicated
      replicas: 1

volumes:
  elasticsearch_data:
  log_data:
  tmp_data:
  postgres_data:
  redis_data:
  caddy_data:
  caddy_config:
